version: '3'
name: zambranodockerizado-courses-app
services:
  ca-courses-service:
    container_name: ca-courses-service
    build: ./BACKEND/msvc-cursos
    image: zambranodockerizado/coursesapp:courses-service
    ports:
    - "8002:8002"
    depends_on:
      ca-database-postgres:
        condition: service_healthy
      ca-keycloack:
        condition: service_healthy
    environment:
      - spring.datasource.url=jdbc:postgresql://ca-database-postgres:5432/appdb
      - spring.datasource.username=postgres
      - spring.datasource.password=postgres
      - feign.url.user-service=http://ca-users-service:8001
      - KEYCLOAK_ISSUER_URI=http://ca-keycloack:8080/realms/CoursesApp
      - spring.security.oauth2.resourceserver.jwt.issuer-uri=http://ca-keycloack:8080/realms/CoursesApp
  ca-users-service:
    container_name: ca-users-service
    build: ./BACKEND/msvc-usuarios
    image: zambranodockerizado/coursesapp:users-service
    ports:
    - "8001:8001"
    depends_on:
      ca-database-mysql:
        condition: service_healthy
      ca-keycloack:
        condition: service_healthy
    environment:
      - spring.datasource.url=jdbc:mysql://ca-database-mysql:3306/appdb
      - feign.url.courses-service=http://ca-courses-service:8002
      - spring.datasource.username=root
      - spring.datasource.password=root
      - KEYCLOAK_ISSUER_URI=http://ca-keycloack:8080/realms/CoursesApp
      - spring.security.oauth2.resourceserver.jwt.issuer-uri=http://ca-keycloack:8080/realms/CoursesApp
  ca-webapp:
    container_name: ca-courses-web
    build: ./FRONTEND
    image: zambranodockerizado/coursesapp:courses-web
    ports:
    - "80:80"
    depends_on:
    - "ca-courses-service"
    - "ca-users-service"
    environment:
      - USERS_SERVICE_ENDPOINT=http://localhost:8001
      - COURSES_SERVICE_ENDPOINT=http://localhost:8002
      - KEYCLOAK_URL=http://ca-keycloack:8080
      - KEYCLOAK_REALM=CoursesApp
      - KEYCLOAK_CLIENT_ID=coursesapp
  ca-database-mysql:
    container_name: ca-database-mysql
    image: "mysql:latest"
    ports:
    - "3307:3306"
    environment:
    - MYSQL_ROOT_PASSWORD=root
    - MYSQL_DATABASE=appdb
    healthcheck:
        test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
        timeout: 5s
        interval: 1s
        retries: 10
  ca-database-postgres:
    container_name: ca-database-postgres
    image: "postgres:latest"
    ports:
    - "5433:5432"
    environment:
    - POSTGRES_USER=postgres
    - POSTGRES_PASSWORD=postgres
    - POSTGRES_DB=appdb
    healthcheck:
        test: ["CMD", "pg_isready", "-U", "postgres"]
        timeout: 10s
        retries: 10
  ca-database-postgres-keycloak:
    container_name: ca-database-postgres-keycloak
    image: "postgres:latest"
    ports:
    - "5434:5432"
    environment:
    - POSTGRES_USER=postgres
    - POSTGRES_PASSWORD=postgres
    - POSTGRES_DB=keycloak
    healthcheck:
        test: ["CMD", "pg_isready", "-U", "postgres"]
        timeout: 10s
        retries: 10
  ca-keycloack:
    container_name: ca-keycloack
    image: "quay.io/keycloak/keycloak:latest"
    command: start-dev
    ports:
    - "8080:8080"
    - "9000:9000"
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_HOSTNAME_PORT=8080
      - KC_HEALTH_ENABLED=true
      - KC_HTTP_ENABLED=true
      - KC_METRICS_ENABLED=true
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://ca-database-postgres-keycloak:5432/keycloak
      - KC_DB_USERNAME=postgres
      - KC_DB_PASSWORD=postgres
    restart: always
    depends_on:
      ca-database-postgres-keycloak:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/9000;echo -e \"GET /health/ready HTTP/1.1\r\nhost: http://localhost\r\nConnection: close\r\n\r\n\" >&3;grep \"HTTP/1.1 200 OK\" <&3"]
      interval: 3s
      timeout: 5s
      retries: 10